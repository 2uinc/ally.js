{
  "@ally-doc-inert": "Considering the `<html>` and `<body>` element focusable should have no benefit to a website (unless explicitly made focusable by adding the `tabindex` attribute), which is why ally.js considers the `<html>` and `<body>` element inert.",
  "html": {
    "ally": "@ally-doc-inert",
    "general": "The `<html>` element itself is not considered focusable, but some browsers may give it focus when focus is passed from browser UI to the document."
  },
  "body": {
    "ally": "@ally-doc-inert",
    "general": "The `<body>` element itself is not considered focusable, but it is has focus (i.e. is `document.activeElement`) if no other element has focus."
  },

  "@fieldset-disabled-input": "should not be focusable as per [disabled elements](http://www.w3.org/TR/html5/disabled-elements.html#concept-element-disabled). [Blink 453847](https://code.google.com/p/chromium/issues/detail?id=453847), [Webkit 141086](https://bugs.webkit.org/show_bug.cgi?id=141086)",
  "fieldset[tabindex=0][disabled]": {
    "alias": [
      "fieldset[tabindex=-1][disabled]"
    ],
    "browsers": {
      "chrome-stable": "@fieldset-disabled-input",
      "chrome-nightly": "@fieldset-disabled-input",
      "safari-9": "@fieldset-disabled-input",
      "webkit-nightly": "@fieldset-disabled-input",
      "chrome-mobile": "@fieldset-disabled-input",
      "ios-9": "@fieldset-disabled-input"
    }
  },

  "label[for=\"label-target\"][tabindex=-1]": {
    "alias": [
      "label[tabindex=-1]",
      "label[tabindex=0]"
    ],
    "general": "The activation behavior of the [`<label>`](http://www.w3.org/TR/html5/forms.html#the-label-element) element is not defined beyond »… should match the platform's label behavior.«"
  },

  "span{user-modify}": "The CSS property [`user-modify`](http://www.w3.org/TR/2000/WD-css3-userint-20000216#user-modify) was proposed and dropped from [CSS UI Level 3](http://www.w3.org/TR/css3-ui/) and has thus not become a standard yet.",

  "@invalid-tabindex-value": "The value is invalid according to [rules for parsing integers](http://www.w3.org/TR/html5/infrastructure.html#rules-for-parsing-integers) required by [HTML5 tabindex](http://www.w3.org/TR/html5/editing.html#sequential-focus-navigation-and-the-tabindex-attribute)",
  "@empty-tabindex-ie11": "`tabindex=\"\"` is parsed to the value `-32768`. [Trident 1072965](https://connect.microsoft.com/IE/feedback/details/1072965)",
  "[tabindex=3 ]": "The value's trailing spaces are considered invalid according to [rules for parsing integers](http://www.w3.org/TR/html5/infrastructure.html#rules-for-parsing-integers) required by [HTML5 tabindex](http://www.w3.org/TR/html5/editing.html#sequential-focus-navigation-and-the-tabindex-attribute)",
  "[tabindex=3x]": "The value's trailing non-numeric characters are considered invalid according to [rules for parsing integers](http://www.w3.org/TR/html5/infrastructure.html#rules-for-parsing-integers) required by [HTML5 tabindex](http://www.w3.org/TR/html5/editing.html#sequential-focus-navigation-and-the-tabindex-attribute)",
  "[tabindex=hello]": "@invalid-tabindex-value",
  "input[tabindex=hello]": "@invalid-tabindex-value",
  "[tabindex=\"\"]": {
    "general": "@invalid-tabindex-value",
    "browsers": {
      "ie-10": "@empty-tabindex-ie11",
      "ie-11": "@empty-tabindex-ie11"
    }
  },

  "@image-map-firefox-loading": "The `<map>`'s `<area>`s are inert (not focusable) as long as the image is still loading.",
  "area[href].upper": {
    "browsers": {
      "firefox-stable": "@image-map-firefox-loading",
      "firefox-nightly": "@image-map-firefox-loading"
    }
  },

  "@image-map-area-no-href": "If an `<area>` element doesn't have an `href` attribute, it's not a link (and should therefore not be interactive).",
  "area": {
    "alias": [
      "area[tabindex=-1]",
      "img[tabindex=-1] area"
    ],
    "browsers": {
      "firefox-stable": "@image-map-area-no-href",
      "firefox-nightly": "@image-map-area-no-href"
    }
  },

  "area[href][tabindex=-1].lower": "In some browsers adding a `tabindex` attribute to an `<area>` element will make it inert (not focusable).",
  "img[usemap][tabindex=-1]": "In some browsers `<img>` elements with an associated image map cannot be made focusable.",
  "img[tabindex=-1] area[href].lower": "In some browsers the image map associated with an `<img>` element can be removed from the document's sequential navigation order by adding `tabindex=\"-1\"` to the `<img>` element.",
  "map.invalid-image area[href].lower": "Some browsers will not make an image map focusable, if it is associated with an `<img>` that does have a proper image loaded.",

  "audio": "`<audio>` is considered [interactive content](http://www.w3.org/TR/html5/dom.html#interactive-content) only with the <code>controls</code> attribute present",
  "video": "`<video>` is considered [interactive content](http://www.w3.org/TR/html5/dom.html#interactive-content) only with the <code>controls</code> attribute present",

  "@iframe-firefox": "Firefox does not dispatch `focus` event but `document.activeElement` is updated properly. [Gecko 131784](https://bugzilla.mozilla.org/show_bug.cgi?id=131784)",
  "-firefox-iframe": {
    "alias": [
      "iframe",
      "iframe[tabindex=-1]",
      "iframe{focusable}",
      "iframe{focusable}[tabindex=-1]"
    ],
    "browsers": {
      "firefox-stable": "@iframe-firefox",
      "firefox-nightly": "@iframe-firefox"
    }
  },

  "@iframe-firefox": "Firefox does not dispatch `focus` event but `document.activeElement` is updated properly. [Gecko 131784](https://bugzilla.mozilla.org/show_bug.cgi?id=131784)",
  "iframe": {
    "ally": "Because of the [Same Origin Policy](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy) we can't reliably look inside `<iframe>`s to determine their content, which is why ally.js considers all `<iframe>`s keyboard focusable (tabbable).",
    "browsers": {
      "ie-12": "Microsoft Edge requires the `<iframe>`d document to contain a focusable element in order to make it keyboard accessible.\n\nThis is **undetectable** because we can't look inside all iframes, because of the [Same Origin Policy](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy)."
    }
  },

  "iframe{focusable} -> input": {
    "alias": [
      "iframe{focusable}[tabindex=-1] -> input",
      "iframe{focusable} -> body",
      "iframe -> body"
    ],
    "ally": "Because of the [Same Origin Policy](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy) we can't reliably look inside `<iframe>`s to determine their content, which is why ally.js considers all `<iframe>` content inert",
    "general": "Technically the content of an iframe [can be accessible to script](https://developer.mozilla.org/en/docs/Web/HTML/Element/iframe#Scripting).\n\nHowever, this test is only verifying keyboard focusability."
  },

  "embed": {
    "alias": [
      "embed[tabindex=-1]",
      "embed[type=mp4]",
      "embed[type=mp4][tabindex=-1]",
      "embed[type=ogv]",
      "embed[type=ogv][tabindex=-1]",
      "embed[type=svg]",
      "embed[type=svg][tabindex=-1]",
      "embed[type=svg][tabindex=0]"
    ],
    "ally": "Because the behavior of the `<embed>` element depends on the content type and browser plugin, ally considers all `<embed>` elements focus-relevant but *not* focusable.",
    "general": "The behavior of the `<embed>` element depends on the content type and browser plugin."
  },

  "-embed-video": {
    "alias": [
      "embed",
      "embed[tabindex=-1]",
      "embed[type=mp4]",
      "embed[type=mp4][tabindex=-1]",
      "embed[type=ogv]",
      "embed[type=ogv][tabindex=-1]"
    ],
    "general": "The [`<video>` element](https://developer.mozilla.org/en/docs/Web/HTML/Element/video) should be used for embedding video content instead of [`<embed>` element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed). The HTML5 `<video>` element is supported [virtually everywhere](http://caniuse.com/#feat=video)."
  },

  "object": {
    "alias": [
      "object[src=swf]",
      "object[src=swf][tabindex=-1]",
      "object[src=svg]",
      "object[src=svg][tabindex=-1]"
    ],
    "general": "The behavior of the `<object>` element depends on the content it presents. The most common content types used with `<object>` are `SVG` and `SWF`."
  },

  "object[src=swf]": {
    "alias": [
      "object[src=swf][height=0]"
    ],
    "browsers": {
      "ie-10": "This element is actually **tabbable** (keyboard focusable).\n\nThe test shows `focusable` because the elements were removed from the tabbing test to avoid IE10 from getting focus stuck in the browser UI. This seems to be a problem similar to [Trident 1109008](https://connect.microsoft.com/IE/feedback/details/1109008)."
    }
  },

  "svg": {
    "alias": [
      "svg",
      "svg[tabindex=-1]",
      "svg[focusable=false]",
      "svg:has(a[tabindex=-1])",
      "svg:has(a[tabindex=0])",

      "svg a[xlink|href]",
      "svg a[xlink|href] text",
      "svg[tabindex=-1] a[xlink|href]",
      "svg[tabindex=-1] a[xlink|href] text",
      "svg a[focusable=false]",

      "svg a[xlink|href][tabindex=-1]",
      "svg a[xlink|href][tabindex=-1] text",
      "svg a[xlink|href][tabindex=0]",
      "svg a[xlink|href][tabindex=0] text",

      "svg rect",
      "svg text",
      "svg rect[tabindex=0]",
      "svg rect[tabindex=-1]",
      "svg rect[focusable=true]",

      "svg[focusable=false] a[xlink|href]",

      "svg{viewbox}",
      "svg rect[tabindex=0]{viewbox}",
      "svg rect[tabindex=-1]{viewbox}",
      "svg rect[focusable=true]{viewbox}",

      "svg{tiny}",
      "svg{tiny} rect[focusable=true]",
      "svg{tiny} rect[tabindex=0]",
      "svg{tiny} a[focusable=false]",
      "svg{tiny} a[tabindex=-1]",
      "svg{tiny} rect[focusable=true][tabindex=-1]",
      "svg{tiny} rect[focusable=false][tabindex=0]",
      "svg{tiny}[focusable=false]",
      "svg{tiny}[focusable=false] a",

      "svg rect[onfocus]"
    ],
    "general": "[SVG 1.1](http://www.w3.org/TR/SVG/access.html) does not specify much in respect to accessibility. [SVG 2](https://svgwg.org/svg2-draft/access.html#AccessibilityAndSVG) will bring the `tabindex` attribute. [SVG Tiny 1.2](http://www.w3.org/TR/SVGTiny12/interact.html#focusable-attr) knows the `focusable` attribute."
  },

  "@svg-onfocus": "By registering a `focus` event listener the element becomes focusable. [Blink 445798](https://code.google.com/p/chromium/issues/detail?id=445798), [WebKit 140024](https://bugs.webkit.org/show_bug.cgi?id=140024).\n\nThis is **undetectable** because elements don't provide a list of their registered event handlers.",
  "svg rect[onfocus]": {
    "ally": "Elements made focusable by way of adding a `focus` event listener cannot be identified by ally.js",
    "browsers": {
      "chrome-stable": "@svg-onfocus",
      "chrome-nightly": "@svg-onfocus",
      "safari-9": "@svg-onfocus",
      "webkit-nightly": "@svg-onfocus",
      "chrome-mobile": "@svg-onfocus",
      "ios-9": "@svg-onfocus"
    }
  },

  "[hidden] input": {
    "alias": [
      "[hidden][tabindex=-1]",
      "[hidden][tabindex=-1] input",
      "[hidden][tabindex=0]",
      "[hidden][tabindex=0] input"
    ],
    "browsers": {
      "ie-10": "IE10 does not support the `hidden` attribute"
    }
  },

  "details": {
    "alias": [
      "details[tabindex=-1]",
      "details summary",
      "details[tabindex=-1] summary",
      "details summary[tabindex=-1]",
      "details[open] summary",
      "details a[href]",
      "details[open] a[href]"
    ],
    "general": "The [`<details>`](http://www.w3.org/TR/html51/semantics.html#the-details-element) element is specified in HTML 5.1 and [not implemented everywhere](http://caniuse.com/#feat=details)."
  },

  "-details-webkit-151767": {
    "alias": [
      "details summary",
      "details[tabindex=-1] summary",
      "details[open] summary",
      "details[open] a[href]"
    ],
    "browsers": {
      "webkit-nightly": "This element should be keyboard focusable (tabbable), but is currently only focusable because of [WebKit 151767](https://bugs.webkit.org/show_bug.cgi?id=151767)"
    }
  },

  "@ie-scroll-div": "Internet Explorer turns `<div>` and `<span>` elements focusable when they're scrollable, but does *not* do the same for other sectioning or block-level elements",
  "section{scroll-container-overflow-scroll}": {
    "browsers": {
      "ie-10": "@ie-scroll-div",
      "ie-11": "@ie-scroll-div"
    }
  },

  "@ismap-ie-bug": "The [`ismap` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-ismap) makes the `<img>` focusable (in addition to the parent `<a>`)",
  "a > img[ismap]": {
    "alias": [
      "a[tabindex=-1] > img[ismap]"
    ],
    "browsers": {
      "ie-10": "@ismap-ie-bug",
      "ie-11": "@ismap-ie-bug",
      "ie-12": "@ismap-ie-bug"
    }
  },

  "@flexbox-ie-bug": "There is no indication that the focusability of an element can be inherited by its children, let alone triggered by flexbox layout.",
  "a{flexbox} > span": {
    "alias": [
      "[tabindex=\"-1\"]{flexbox} > span1",
      "[tabindex=\"-1\"]{flexbox} > span2"
    ],
    "browsers": {
      "ie-10": "@flexbox-ie-bug",
      "ie-11": "@flexbox-ie-bug"
    }
  },

  "link[itemprop][href]": "naturally focusable according to [HTML5 tabindex](http://www.w3.org/TR/html5/editing.html#sequential-focus-navigation-and-the-tabindex-attribute)",

  "@firefox-keygen-select": "Firefox transforms `<keygen>` to `<select _moz-type=\"-mozilla-keygen\">` while parsing HTML.",
  "keygen": {
    "alias": [
      "keygen[tabindex=-1]"
    ],
    "browsers": {
      "firefox-stable": "@firefox-keygen-select",
      "firefox-nightly": "@firefox-keygen-select"
    },
    "ally": "Because the `<keygen>` element is poorly supported, ally considers all `<keygen>` elements focus-relevant but *not* focusable.",
    "general": "The `<keygen>` element is poorly supported, practically never used and has seen [intent to deprecate](https://groups.google.com/a/chromium.org/forum/m/#!msg/blink-dev/pX5NbX0Xack/kmHsyMGJZAMJ)"
  }
}